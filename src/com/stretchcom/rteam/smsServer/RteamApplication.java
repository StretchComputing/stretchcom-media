package com.stretchcom.rteam.smsServer;

import java.io.File;

import org.restlet.Application;  
import org.restlet.Restlet;  
import org.restlet.data.LocalReference;
import org.restlet.data.Protocol;
import org.restlet.resource.Directory;
import org.restlet.routing.Router;  
  
// This class is "registered" as the application Class in web.xml
// Application class is a subclass of Restlet, so is a type of Restlet
public class RteamApplication extends Application {  
	public static final String CURRENT_USER = "rTeam.currentUser";
  
    /** 
     * Creates a root Restlet that will receive all incoming calls. 
     */  
    @Override 
    // called by the Restlet framework when the applications starts.
    // The application must override this method. It must create and return the inbound root restlet
    public synchronized Restlet createInboundRoot() {  
        Router router = new Router(getContext());  
        
        getConnectorService().getClientProtocols().add(Protocol.FILE);

        // Serve the files generated by the GWT compilation step.
        File warDir = new File("");
        if (!"war".equals(warDir.getName())) {
            warDir = new File(warDir, "war/");
        }

        // for serving up the GWT Host HTML file - copied from GWT serialization example
        Directory dir = new Directory(getContext(), LocalReference.createFileReference(warDir));
        router.attachDefault(dir);
  
        // Define routes
        router.attach("/email", EmailResource.class);
        router.attach("/vitals", VitalsResource.class);
        
        // authentication requests, then route
        AuthorizationFilter authorizationFilter = new AuthorizationFilter(getContext());
        authorizationFilter.setNext(router);
        return authorizationFilter;
    }  
  
}  